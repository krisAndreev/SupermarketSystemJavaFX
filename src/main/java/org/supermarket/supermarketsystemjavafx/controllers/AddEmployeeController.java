package org.supermarket.supermarketsystemjavafx.controllers;

import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.stage.Stage;
import org.supermarket.supermarketsystemjavafx.dao.EmployeeDAO;
import org.supermarket.supermarketsystemjavafx.exceptions.DatabaseException;
import org.supermarket.supermarketsystemjavafx.models.Employee;

public class AddEmployeeController {
    @FXML private TextField nameField;
    @FXML private TextField salaryField;
    @FXML private ComboBox<String> positionComboBox;
    @FXML private PasswordField pinField;

    @FXML
    public void initialize() {
        // Initialize position options
        positionComboBox.getItems().addAll(
                "Cashier",
                "Manager",
                "Stock Clerk",
                "Supervisor"
        );
        positionComboBox.getSelectionModel().selectFirst();
    }

    @FXML
    private void handleSaveEmployee() {
        try {
            // Validate inputs
            if (nameField.getText().isEmpty()) {
                showAlert("Validation Error", "Employee name is required");
                return;
            }

            double salary = Double.parseDouble(salaryField.getText());
            String pin = pinField.getText();

            if (salary <= 0) {
                showAlert("Validation Error", "Salary must be a positive value");
                return;
            }

            if (pin.length() != 4 || !pin.matches("\\d+")) {
                showAlert("Validation Error", "PIN must be 4 digits");
                return;
            }

            // Create new employee
            Employee newEmployee = new Employee(
                    0, // ID will be generated by database
                    nameField.getText(),
                    salary
            );

            // Save to database
            EmployeeDAO.addEmployee(newEmployee, pin);

            // Show success and close window
            showAlert("Success", "Employee added successfully");
            closeWindow();

        } catch (NumberFormatException e) {
            showAlert("Input Error", "Please enter valid numbers for salary");
        } catch (DatabaseException e) {
            showAlert("Database Error", "Failed to save employee: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            showAlert("Error", "An unexpected error occurred");
            e.printStackTrace();
        }
    }

    @FXML
    private void handleCancel() {
        closeWindow();
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    private void closeWindow() {
        Stage stage = (Stage) nameField.getScene().getWindow();
        stage.close();
    }
}