package org.supermarket.supermarketsystemjavafx.controllers;

import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.stage.Stage;
import org.supermarket.supermarketsystemjavafx.dao.ProductDAO;
import org.supermarket.supermarketsystemjavafx.exceptions.DatabaseException;
import org.supermarket.supermarketsystemjavafx.models.Product;
import org.supermarket.supermarketsystemjavafx.services.PricingService;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class AddItemController {
    @FXML private TextField nameField;
    @FXML private TextField purchasePriceField;
    @FXML private ComboBox<String> categoryComboBox;
    @FXML private DatePicker expirationDatePicker;
    @FXML private TextField quantityField;
    @FXML private TextField barcodeField;

    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    @FXML
    public void initialize() {
        // Initialize category options
        categoryComboBox.getItems().addAll("FOOD", "NON_FOOD");
        categoryComboBox.getSelectionModel().selectFirst();

        // Set default expiration date (2 weeks from today)
        expirationDatePicker.setValue(LocalDate.now().plusWeeks(2));
    }

    @FXML
    private void handleSaveProduct() {
        try {
            // Validate inputs
            if (nameField.getText().isEmpty()) {
                showAlert("Validation Error", "Product name is required");
                return;
            }

            double purchasePrice = Double.parseDouble(purchasePriceField.getText());
            int quantity = Integer.parseInt(quantityField.getText());
            LocalDate expirationDate = expirationDatePicker.getValue();
            String barcode = barcodeField.getText().isEmpty() ? null : barcodeField.getText();

            if (purchasePrice <= 0 || quantity < 0) {
                showAlert("Validation Error", "Price and quantity must be positive values");
                return;
            }

            if (expirationDate.isBefore(LocalDate.now())) {
                showAlert("Validation Error", "Expiration date cannot be in the past");
                return;
            }

            // Create new product
            Product newProduct = new Product(
                    0, // ID will be generated by database
                    nameField.getText(),
                    purchasePrice,
                    0, // Selling price will be calculated
                    Product.Category.valueOf(categoryComboBox.getValue()),
                    expirationDate,
                    quantity,
                    barcode
            );

            // Calculate selling price
            PricingService.updateProductSellingPrice(newProduct);

            // Save to database
            ProductDAO.addProduct(newProduct);

            // Show success and close window
            showAlert("Success", "Product added successfully");
            closeWindow();

        } catch (NumberFormatException e) {
            showAlert("Input Error", "Please enter valid numbers for price and quantity");
        } catch (DatabaseException e) {
            showAlert("Database Error", "Failed to save product: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            showAlert("Error", "An unexpected error occurred");
            e.printStackTrace();
        }
    }

    @FXML
    private void handleCancel() {
        closeWindow();
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    private void closeWindow() {
        Stage stage = (Stage) nameField.getScene().getWindow();
        stage.close();
    }
}